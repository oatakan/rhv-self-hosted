---
- name: get pci slot
  shell: lspci -mm | grep "{{ pci_device_key_name }}" | cut -d " " -f 1
  register: pci_slot

- name: find vendor_device
  shell: lspci -kn -s "{{ item }}" | head -1 | cut -d" " -f 3 | tr -d '[:space:]'
  register: pci_vendor_device
  loop: "{{ pci_slot.stdout_lines }}"

- name: find module
  shell: lspci -vkmmn -s "{{ item }}" | grep "^Module:" | cut -d":" -f 2 | tr -d '[:space:]'
  register: pci_module
  loop: "{{ pci_slot.stdout_lines }}"

- name: add pci-stub.ids to grub
  lineinfile:
    state: present
    dest: /etc/default/grub
    backrefs: yes
    regexp: '^(GRUB_CMDLINE_LINUX=(?!.*vfio-pci.ids)\"[^\"]+)(\".*)'
    #line: '\1 pci-stub.ids={{ pci_vendor_device.results|map(attribute="stdout")|reject("equalto", "")|join (",") }}\2'
    line: '\1 vfio-pci.ids={{ pci_vendor_device.results|map(attribute="stdout")|reject("equalto", "")|join (",") }}\2'
  when: pci_vendor_device is defined

- name: add rdblacklist to grub
  lineinfile:
    state: present
    dest: /etc/default/grub
    backrefs: yes
    regexp: '^(GRUB_CMDLINE_LINUX=(?!.*rd.driver.blacklist)\"[^\"]+)(\".*)'
    line: '\1 rd.driver.blacklist={{ pci_module.results|map(attribute="stdout")|reject("equalto", "")|join (",") }}\2'
  when: pci_module is defined

- include_tasks: detach_gpu.yml
  when: detach_gpu_from_host|bool