---

- block:
    #- name: get the latest edk2 package name
    #  shell: curl -s "{{ edk2_rpm_url }}" | sed -n 's/^.*\(edk2\.git\-ovmf\-x64.*\.rpm\).*$/\1/p'
    #  register: edk2_package_name

    - name: get the latest edk2 packages
      uri:
        url: "{{ edk2_rpm_url }}"
        return_content: yes
        validate_certs: no
      register: edk2_package_list_page

    - name: set edk2 package name
      set_fact:
        edk2_package_name: "{{ edk2_package_list_page.content | regex_search('edk2.git-ovmf-x64.*.rpm', multiline=True) }}"
      when:
        - edk2_package_list_page is success
        - edk2_package_list_page.content is defined

    - name: ensure edk2 package is present
      yum:
        name: "{{ edk2_rpm_url }}{{ edk2_package_name }}"
        state: present
        disable_gpg_check: yes
      when: edk2_package_name is defined
  rescue:
    # install from source...
    - name: ensure prereq packages are present
      yum:
        name:
          - "@Development tools"
          - git
          - libuuid
          - libuuid-devel
          - iasl
          - nasm
          - git

    - name: check out repo
      git:
        repo: "{{ edk2_git_url }}"
        dest: /tmp/edk2
        recursive: yes
        force: yes

    - name: run make
      shell: source ./edksetup.sh && make -C BaseTools/
      args:
        chdir: /tmp/edk2

    - name: run build
      shell: source ./edksetup.sh && build -a X64 -t GCC48 -b RELEASE -p OvmfPkg/OvmfPkgX64.dsc
      args:
        chdir: /tmp/edk2
        creates: /tmp/edk2/Build/OvmfX64/RELEASE_GCC48/FV/OVMF.fd

    - name: ensure dest directory exist
      file:
        path: /usr/share/edk2.git/ovmf-x64/
        state: directory

    - name: copy OVMF file
      copy:
        src: /tmp/edk2/Build/OvmfX64/RELEASE_GCC48/FV/{{ item }}.fd
        dest: /usr/share/edk2.git/ovmf-x64/{{ item }}-pure-efi.fd
        remote_src: yes
      loop:
        - OVMF
        - OVMF_CODE